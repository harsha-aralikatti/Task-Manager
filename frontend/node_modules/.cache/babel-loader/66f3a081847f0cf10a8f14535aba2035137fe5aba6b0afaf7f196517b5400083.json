{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/React_Flask_Task_Manager/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskForm from \"./TaskForm\";\nimport TaskList from \"./TaskList\";\nimport Login from \"./Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState(null); // null = logged out\n\n  useEffect(() => {\n    if (user) {\n      fetchTasks();\n    }\n  }, [user]);\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/tasks\");\n      setTasks(res.data);\n    } catch (error) {\n      alert(\"Error fetching tasks.\");\n    }\n  };\n  const addTask = async (title, description) => {\n    if (!title || !description) {\n      alert(\"Please enter title and description\");\n      return;\n    }\n    try {\n      await axios.post(\"http://localhost:5000/tasks\", {\n        title,\n        description,\n        completed: false\n      });\n      fetchTasks();\n    } catch (error) {\n      alert(\"Error adding task.\");\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      fetchTasks();\n    } catch (error) {\n      alert(\"Error deleting task.\");\n    }\n  };\n  const handleLogin = username => {\n    // You can expand this to real auth later\n    setUser(username);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setTasks([]);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between align-items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleLogout,\n        children: [\"Logout (\", user, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vgD7m9u87JShmwBKnEpilmbG86k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskForm","TaskList","Login","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","user","setUser","fetchTasks","res","get","data","error","alert","addTask","title","description","post","completed","deleteTask","id","delete","handleLogin","username","handleLogout","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/apple/Desktop/React_Flask_Task_Manager/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskForm from \"./TaskForm\";\nimport TaskList from \"./TaskList\";\nimport Login from \"./Login\";\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [user, setUser] = useState(null); // null = logged out\n\n  useEffect(() => {\n    if (user) {\n      fetchTasks();\n    }\n  }, [user]);\n\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/tasks\");\n      setTasks(res.data);\n    } catch (error) {\n      alert(\"Error fetching tasks.\");\n    }\n  };\n\n  const addTask = async (title, description) => {\n    if (!title || !description) {\n      alert(\"Please enter title and description\");\n      return;\n    }\n    try {\n      await axios.post(\"http://localhost:5000/tasks\", {\n        title,\n        description,\n        completed: false,\n      });\n      fetchTasks();\n    } catch (error) {\n      alert(\"Error adding task.\");\n    }\n  };\n\n  const deleteTask = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      fetchTasks();\n    } catch (error) {\n      alert(\"Error deleting task.\");\n    }\n  };\n\n  const handleLogin = (username) => {\n    // You can expand this to real auth later\n    setUser(username);\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    setTasks([]);\n  };\n\n  if (!user) {\n    return <Login onLogin={handleLogin} />;\n  }\n\n  return (\n    <div className=\"container py-4\">\n      <div className=\"d-flex justify-content-between align-items-center mb-4\">\n        <h2>Task Manager</h2>\n        <button className=\"btn btn-secondary\" onClick={handleLogout}>\n          Logout ({user})\n        </button>\n      </div>\n\n      <TaskForm addTask={addTask} />\n\n      <TaskList tasks={tasks} deleteTask={deleteTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}